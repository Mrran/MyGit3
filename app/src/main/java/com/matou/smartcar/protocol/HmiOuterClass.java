package com.matou.smartcar.protocol;// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Hmi.proto

public final class HmiOuterClass {
  private HmiOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface HmiOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Hmi)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *消息类型
     * </pre>
     *
     * <code>.Hmi.DataType type = 1;</code>
     */
    int getTypeValue();
    /**
     * <pre>
     *消息类型
     * </pre>
     *
     * <code>.Hmi.DataType type = 1;</code>
     */
    HmiOuterClass.Hmi.DataType getType();

    /**
     * <pre>
     *消息序列号
     * </pre>
     *
     * <code>int32 id = 2;</code>
     */
    int getId();

    /**
     * <pre>
     *车辆信息
     * </pre>
     *
     * <code>.Vehicle vehicle = 3;</code>
     */
    boolean hasVehicle();
    /**
     * <pre>
     *车辆信息
     * </pre>
     *
     * <code>.Vehicle vehicle = 3;</code>
     */
    VehicleOuterClass.Vehicle getVehicle();
    /**
     * <pre>
     *车辆信息
     * </pre>
     *
     * <code>.Vehicle vehicle = 3;</code>
     */
    VehicleOuterClass.VehicleOrBuilder getVehicleOrBuilder();

    /**
     * <pre>
     *红绿灯信息
     * </pre>
     *
     * <code>.TrafficLight trafficLight = 4;</code>
     */
    boolean hasTrafficLight();
    /**
     * <pre>
     *红绿灯信息
     * </pre>
     *
     * <code>.TrafficLight trafficLight = 4;</code>
     */
    TrafficLightOuterClass.TrafficLight getTrafficLight();
    /**
     * <pre>
     *红绿灯信息
     * </pre>
     *
     * <code>.TrafficLight trafficLight = 4;</code>
     */
    TrafficLightOuterClass.TrafficLightOrBuilder getTrafficLightOrBuilder();

    /**
     * <pre>
     *障碍物信息
     * </pre>
     *
     * <code>.Obstacle obstacle = 5;</code>
     */
    boolean hasObstacle();
    /**
     * <pre>
     *障碍物信息
     * </pre>
     *
     * <code>.Obstacle obstacle = 5;</code>
     */
    ObstacleOuterClass.Obstacle getObstacle();
    /**
     * <pre>
     *障碍物信息
     * </pre>
     *
     * <code>.Obstacle obstacle = 5;</code>
     */
    ObstacleOuterClass.ObstacleOrBuilder getObstacleOrBuilder();

    /**
     * <pre>
     *驾驶状态消息
     * </pre>
     *
     * <code>.DriveState driveState = 6;</code>
     */
    boolean hasDriveState();
    /**
     * <pre>
     *驾驶状态消息
     * </pre>
     *
     * <code>.DriveState driveState = 6;</code>
     */
    DriveStateOuterClass.DriveState getDriveState();
    /**
     * <pre>
     *驾驶状态消息
     * </pre>
     *
     * <code>.DriveState driveState = 6;</code>
     */
    DriveStateOuterClass.DriveStateOrBuilder getDriveStateOrBuilder();

    /**
     * <pre>
     *语音提示消息
     * </pre>
     *
     * <code>.Information information = 7;</code>
     */
    boolean hasInformation();
    /**
     * <pre>
     *语音提示消息
     * </pre>
     *
     * <code>.Information information = 7;</code>
     */
    InformationOuterClass.Information getInformation();
    /**
     * <pre>
     *语音提示消息
     * </pre>
     *
     * <code>.Information information = 7;</code>
     */
    InformationOuterClass.InformationOrBuilder getInformationOrBuilder();

    /**
     * <pre>
     *国标信息
     * </pre>
     *
     * <code>.NationalStandard nationalStandard = 8;</code>
     */
    boolean hasNationalStandard();
    /**
     * <pre>
     *国标信息
     * </pre>
     *
     * <code>.NationalStandard nationalStandard = 8;</code>
     */
    NationalStandardOuterClass.NationalStandard getNationalStandard();
    /**
     * <pre>
     *国标信息
     * </pre>
     *
     * <code>.NationalStandard nationalStandard = 8;</code>
     */
    NationalStandardOuterClass.NationalStandardOrBuilder getNationalStandardOrBuilder();

    /**
     * <pre>
     *高速场景，具体内容参照文档"RoadSideNotification-数据结构.docx"
     * </pre>
     *
     * <code>string RoadSideNotification = 9;</code>
     */
    String getRoadSideNotification();
    /**
     * <pre>
     *高速场景，具体内容参照文档"RoadSideNotification-数据结构.docx"
     * </pre>
     *
     * <code>string RoadSideNotification = 9;</code>
     */
    com.google.protobuf.ByteString
        getRoadSideNotificationBytes();

    /**
     * <pre>
     *实时站点信息
     * </pre>
     *
     * <code>.StationInformation stationInformation = 10;</code>
     */
    boolean hasStationInformation();
    /**
     * <pre>
     *实时站点信息
     * </pre>
     *
     * <code>.StationInformation stationInformation = 10;</code>
     */
    StationInformationOuterClass.StationInformation getStationInformation();
    /**
     * <pre>
     *实时站点信息
     * </pre>
     *
     * <code>.StationInformation stationInformation = 10;</code>
     */
    StationInformationOuterClass.StationInformationOrBuilder getStationInformationOrBuilder();

    /**
     * <pre>
     *车辆周围交通参与者信息
     * </pre>
     *
     * <code>.TrafficParticipants pcts = 11;</code>
     */
    boolean hasPcts();
    /**
     * <pre>
     *车辆周围交通参与者信息
     * </pre>
     *
     * <code>.TrafficParticipants pcts = 11;</code>
     */
    TrafficParticipantOuterClass.TrafficParticipants getPcts();
    /**
     * <pre>
     *车辆周围交通参与者信息
     * </pre>
     *
     * <code>.TrafficParticipants pcts = 11;</code>
     */
    TrafficParticipantOuterClass.TrafficParticipantsOrBuilder getPctsOrBuilder();

    public HmiOuterClass.Hmi.MessageCase getMessageCase();
  }
  /**
   * Protobuf type {@code Hmi}
   */
  public  static final class Hmi extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Hmi)
      HmiOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Hmi.newBuilder() to construct.
    private Hmi(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Hmi() {
      type_ = 0;
      id_ = 0;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Hmi(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 16: {

              id_ = input.readInt32();
              break;
            }
            case 26: {
              VehicleOuterClass.Vehicle.Builder subBuilder = null;
              if (messageCase_ == 3) {
                subBuilder = ((VehicleOuterClass.Vehicle) message_).toBuilder();
              }
              message_ =
                  input.readMessage(VehicleOuterClass.Vehicle.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((VehicleOuterClass.Vehicle) message_);
                message_ = subBuilder.buildPartial();
              }
              messageCase_ = 3;
              break;
            }
            case 34: {
              TrafficLightOuterClass.TrafficLight.Builder subBuilder = null;
              if (messageCase_ == 4) {
                subBuilder = ((TrafficLightOuterClass.TrafficLight) message_).toBuilder();
              }
              message_ =
                  input.readMessage(TrafficLightOuterClass.TrafficLight.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((TrafficLightOuterClass.TrafficLight) message_);
                message_ = subBuilder.buildPartial();
              }
              messageCase_ = 4;
              break;
            }
            case 42: {
              ObstacleOuterClass.Obstacle.Builder subBuilder = null;
              if (messageCase_ == 5) {
                subBuilder = ((ObstacleOuterClass.Obstacle) message_).toBuilder();
              }
              message_ =
                  input.readMessage(ObstacleOuterClass.Obstacle.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((ObstacleOuterClass.Obstacle) message_);
                message_ = subBuilder.buildPartial();
              }
              messageCase_ = 5;
              break;
            }
            case 50: {
              DriveStateOuterClass.DriveState.Builder subBuilder = null;
              if (messageCase_ == 6) {
                subBuilder = ((DriveStateOuterClass.DriveState) message_).toBuilder();
              }
              message_ =
                  input.readMessage(DriveStateOuterClass.DriveState.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((DriveStateOuterClass.DriveState) message_);
                message_ = subBuilder.buildPartial();
              }
              messageCase_ = 6;
              break;
            }
            case 58: {
              InformationOuterClass.Information.Builder subBuilder = null;
              if (messageCase_ == 7) {
                subBuilder = ((InformationOuterClass.Information) message_).toBuilder();
              }
              message_ =
                  input.readMessage(InformationOuterClass.Information.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((InformationOuterClass.Information) message_);
                message_ = subBuilder.buildPartial();
              }
              messageCase_ = 7;
              break;
            }
            case 66: {
              NationalStandardOuterClass.NationalStandard.Builder subBuilder = null;
              if (messageCase_ == 8) {
                subBuilder = ((NationalStandardOuterClass.NationalStandard) message_).toBuilder();
              }
              message_ =
                  input.readMessage(NationalStandardOuterClass.NationalStandard.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((NationalStandardOuterClass.NationalStandard) message_);
                message_ = subBuilder.buildPartial();
              }
              messageCase_ = 8;
              break;
            }
            case 74: {
              String s = input.readStringRequireUtf8();
              messageCase_ = 9;
              message_ = s;
              break;
            }
            case 82: {
              StationInformationOuterClass.StationInformation.Builder subBuilder = null;
              if (messageCase_ == 10) {
                subBuilder = ((StationInformationOuterClass.StationInformation) message_).toBuilder();
              }
              message_ =
                  input.readMessage(StationInformationOuterClass.StationInformation.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((StationInformationOuterClass.StationInformation) message_);
                message_ = subBuilder.buildPartial();
              }
              messageCase_ = 10;
              break;
            }
            case 90: {
              TrafficParticipantOuterClass.TrafficParticipants.Builder subBuilder = null;
              if (messageCase_ == 11) {
                subBuilder = ((TrafficParticipantOuterClass.TrafficParticipants) message_).toBuilder();
              }
              message_ =
                  input.readMessage(TrafficParticipantOuterClass.TrafficParticipants.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((TrafficParticipantOuterClass.TrafficParticipants) message_);
                message_ = subBuilder.buildPartial();
              }
              messageCase_ = 11;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return HmiOuterClass.internal_static_Hmi_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return HmiOuterClass.internal_static_Hmi_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              HmiOuterClass.Hmi.class, HmiOuterClass.Hmi.Builder.class);
    }

    /**
     * <pre>
     *定义消息枚举类
     * </pre>
     *
     * Protobuf enum {@code Hmi.DataType}
     */
    public enum DataType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>UNKNOWN = 0;</code>
       */
      UNKNOWN(0),
      /**
       * <pre>
       *车辆信息
       * </pre>
       *
       * <code>VEHICLE = 1;</code>
       */
      VEHICLE(1),
      /**
       * <pre>
       *红绿灯信息
       * </pre>
       *
       * <code>TRAFFIC_LIGHT = 2;</code>
       */
      TRAFFIC_LIGHT(2),
      /**
       * <pre>
       *障碍物信息
       * </pre>
       *
       * <code>OBSTACLE = 3;</code>
       */
      OBSTACLE(3),
      /**
       * <pre>
       *语音提示信息
       * </pre>
       *
       * <code>INFORMATION = 4;</code>
       */
      INFORMATION(4),
      /**
       * <pre>
       *驾驶状态信息
       * </pre>
       *
       * <code>DRIVE_STATE = 5;</code>
       */
      DRIVE_STATE(5),
      /**
       * <pre>
       *国标场景信息
       * </pre>
       *
       * <code>NATIONAL_STANDARD = 6;</code>
       */
      NATIONAL_STANDARD(6),
      /**
       * <pre>
       *高速场景
       * </pre>
       *
       * <code>ROADSIDE_NOTIFICATION = 7;</code>
       */
      ROADSIDE_NOTIFICATION(7),
      /**
       * <pre>
       *站点实时信息
       * </pre>
       *
       * <code>STATION_INFORMATION = 8;</code>
       */
      STATION_INFORMATION(8),
      /**
       * <pre>
       *主车周围交通参与者信息
       * </pre>
       *
       * <code>TRAFFIC_PARTICIPANTS = 9;</code>
       */
      TRAFFIC_PARTICIPANTS(9),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>UNKNOWN = 0;</code>
       */
      public static final int UNKNOWN_VALUE = 0;
      /**
       * <pre>
       *车辆信息
       * </pre>
       *
       * <code>VEHICLE = 1;</code>
       */
      public static final int VEHICLE_VALUE = 1;
      /**
       * <pre>
       *红绿灯信息
       * </pre>
       *
       * <code>TRAFFIC_LIGHT = 2;</code>
       */
      public static final int TRAFFIC_LIGHT_VALUE = 2;
      /**
       * <pre>
       *障碍物信息
       * </pre>
       *
       * <code>OBSTACLE = 3;</code>
       */
      public static final int OBSTACLE_VALUE = 3;
      /**
       * <pre>
       *语音提示信息
       * </pre>
       *
       * <code>INFORMATION = 4;</code>
       */
      public static final int INFORMATION_VALUE = 4;
      /**
       * <pre>
       *驾驶状态信息
       * </pre>
       *
       * <code>DRIVE_STATE = 5;</code>
       */
      public static final int DRIVE_STATE_VALUE = 5;
      /**
       * <pre>
       *国标场景信息
       * </pre>
       *
       * <code>NATIONAL_STANDARD = 6;</code>
       */
      public static final int NATIONAL_STANDARD_VALUE = 6;
      /**
       * <pre>
       *高速场景
       * </pre>
       *
       * <code>ROADSIDE_NOTIFICATION = 7;</code>
       */
      public static final int ROADSIDE_NOTIFICATION_VALUE = 7;
      /**
       * <pre>
       *站点实时信息
       * </pre>
       *
       * <code>STATION_INFORMATION = 8;</code>
       */
      public static final int STATION_INFORMATION_VALUE = 8;
      /**
       * <pre>
       *主车周围交通参与者信息
       * </pre>
       *
       * <code>TRAFFIC_PARTICIPANTS = 9;</code>
       */
      public static final int TRAFFIC_PARTICIPANTS_VALUE = 9;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @Deprecated
      public static DataType valueOf(int value) {
        return forNumber(value);
      }

      public static DataType forNumber(int value) {
        switch (value) {
          case 0: return UNKNOWN;
          case 1: return VEHICLE;
          case 2: return TRAFFIC_LIGHT;
          case 3: return OBSTACLE;
          case 4: return INFORMATION;
          case 5: return DRIVE_STATE;
          case 6: return NATIONAL_STANDARD;
          case 7: return ROADSIDE_NOTIFICATION;
          case 8: return STATION_INFORMATION;
          case 9: return TRAFFIC_PARTICIPANTS;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<DataType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          DataType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<DataType>() {
              public DataType findValueByNumber(int number) {
                return DataType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return HmiOuterClass.Hmi.getDescriptor().getEnumTypes().get(0);
      }

      private static final DataType[] VALUES = values();

      public static DataType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private DataType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:Hmi.DataType)
    }

    private int messageCase_ = 0;
    private Object message_;
    public enum MessageCase
        implements com.google.protobuf.Internal.EnumLite {
      VEHICLE(3),
      TRAFFICLIGHT(4),
      OBSTACLE(5),
      DRIVESTATE(6),
      INFORMATION(7),
      NATIONALSTANDARD(8),
      ROADSIDENOTIFICATION(9),
      STATIONINFORMATION(10),
      PCTS(11),
      MESSAGE_NOT_SET(0);
      private final int value;
      private MessageCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @Deprecated
      public static MessageCase valueOf(int value) {
        return forNumber(value);
      }

      public static MessageCase forNumber(int value) {
        switch (value) {
          case 3: return VEHICLE;
          case 4: return TRAFFICLIGHT;
          case 5: return OBSTACLE;
          case 6: return DRIVESTATE;
          case 7: return INFORMATION;
          case 8: return NATIONALSTANDARD;
          case 9: return ROADSIDENOTIFICATION;
          case 10: return STATIONINFORMATION;
          case 11: return PCTS;
          case 0: return MESSAGE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public MessageCase
    getMessageCase() {
      return MessageCase.forNumber(
          messageCase_);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <pre>
     *消息类型
     * </pre>
     *
     * <code>.Hmi.DataType type = 1;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     *消息类型
     * </pre>
     *
     * <code>.Hmi.DataType type = 1;</code>
     */
    public HmiOuterClass.Hmi.DataType getType() {
      HmiOuterClass.Hmi.DataType result = HmiOuterClass.Hmi.DataType.valueOf(type_);
      return result == null ? HmiOuterClass.Hmi.DataType.UNRECOGNIZED : result;
    }

    public static final int ID_FIELD_NUMBER = 2;
    private int id_;
    /**
     * <pre>
     *消息序列号
     * </pre>
     *
     * <code>int32 id = 2;</code>
     */
    public int getId() {
      return id_;
    }

    public static final int VEHICLE_FIELD_NUMBER = 3;
    /**
     * <pre>
     *车辆信息
     * </pre>
     *
     * <code>.Vehicle vehicle = 3;</code>
     */
    public boolean hasVehicle() {
      return messageCase_ == 3;
    }
    /**
     * <pre>
     *车辆信息
     * </pre>
     *
     * <code>.Vehicle vehicle = 3;</code>
     */
    public VehicleOuterClass.Vehicle getVehicle() {
      if (messageCase_ == 3) {
         return (VehicleOuterClass.Vehicle) message_;
      }
      return VehicleOuterClass.Vehicle.getDefaultInstance();
    }
    /**
     * <pre>
     *车辆信息
     * </pre>
     *
     * <code>.Vehicle vehicle = 3;</code>
     */
    public VehicleOuterClass.VehicleOrBuilder getVehicleOrBuilder() {
      if (messageCase_ == 3) {
         return (VehicleOuterClass.Vehicle) message_;
      }
      return VehicleOuterClass.Vehicle.getDefaultInstance();
    }

    public static final int TRAFFICLIGHT_FIELD_NUMBER = 4;
    /**
     * <pre>
     *红绿灯信息
     * </pre>
     *
     * <code>.TrafficLight trafficLight = 4;</code>
     */
    public boolean hasTrafficLight() {
      return messageCase_ == 4;
    }
    /**
     * <pre>
     *红绿灯信息
     * </pre>
     *
     * <code>.TrafficLight trafficLight = 4;</code>
     */
    public TrafficLightOuterClass.TrafficLight getTrafficLight() {
      if (messageCase_ == 4) {
         return (TrafficLightOuterClass.TrafficLight) message_;
      }
      return TrafficLightOuterClass.TrafficLight.getDefaultInstance();
    }
    /**
     * <pre>
     *红绿灯信息
     * </pre>
     *
     * <code>.TrafficLight trafficLight = 4;</code>
     */
    public TrafficLightOuterClass.TrafficLightOrBuilder getTrafficLightOrBuilder() {
      if (messageCase_ == 4) {
         return (TrafficLightOuterClass.TrafficLight) message_;
      }
      return TrafficLightOuterClass.TrafficLight.getDefaultInstance();
    }

    public static final int OBSTACLE_FIELD_NUMBER = 5;
    /**
     * <pre>
     *障碍物信息
     * </pre>
     *
     * <code>.Obstacle obstacle = 5;</code>
     */
    public boolean hasObstacle() {
      return messageCase_ == 5;
    }
    /**
     * <pre>
     *障碍物信息
     * </pre>
     *
     * <code>.Obstacle obstacle = 5;</code>
     */
    public ObstacleOuterClass.Obstacle getObstacle() {
      if (messageCase_ == 5) {
         return (ObstacleOuterClass.Obstacle) message_;
      }
      return ObstacleOuterClass.Obstacle.getDefaultInstance();
    }
    /**
     * <pre>
     *障碍物信息
     * </pre>
     *
     * <code>.Obstacle obstacle = 5;</code>
     */
    public ObstacleOuterClass.ObstacleOrBuilder getObstacleOrBuilder() {
      if (messageCase_ == 5) {
         return (ObstacleOuterClass.Obstacle) message_;
      }
      return ObstacleOuterClass.Obstacle.getDefaultInstance();
    }

    public static final int DRIVESTATE_FIELD_NUMBER = 6;
    /**
     * <pre>
     *驾驶状态消息
     * </pre>
     *
     * <code>.DriveState driveState = 6;</code>
     */
    public boolean hasDriveState() {
      return messageCase_ == 6;
    }
    /**
     * <pre>
     *驾驶状态消息
     * </pre>
     *
     * <code>.DriveState driveState = 6;</code>
     */
    public DriveStateOuterClass.DriveState getDriveState() {
      if (messageCase_ == 6) {
         return (DriveStateOuterClass.DriveState) message_;
      }
      return DriveStateOuterClass.DriveState.getDefaultInstance();
    }
    /**
     * <pre>
     *驾驶状态消息
     * </pre>
     *
     * <code>.DriveState driveState = 6;</code>
     */
    public DriveStateOuterClass.DriveStateOrBuilder getDriveStateOrBuilder() {
      if (messageCase_ == 6) {
         return (DriveStateOuterClass.DriveState) message_;
      }
      return DriveStateOuterClass.DriveState.getDefaultInstance();
    }

    public static final int INFORMATION_FIELD_NUMBER = 7;
    /**
     * <pre>
     *语音提示消息
     * </pre>
     *
     * <code>.Information information = 7;</code>
     */
    public boolean hasInformation() {
      return messageCase_ == 7;
    }
    /**
     * <pre>
     *语音提示消息
     * </pre>
     *
     * <code>.Information information = 7;</code>
     */
    public InformationOuterClass.Information getInformation() {
      if (messageCase_ == 7) {
         return (InformationOuterClass.Information) message_;
      }
      return InformationOuterClass.Information.getDefaultInstance();
    }
    /**
     * <pre>
     *语音提示消息
     * </pre>
     *
     * <code>.Information information = 7;</code>
     */
    public InformationOuterClass.InformationOrBuilder getInformationOrBuilder() {
      if (messageCase_ == 7) {
         return (InformationOuterClass.Information) message_;
      }
      return InformationOuterClass.Information.getDefaultInstance();
    }

    public static final int NATIONALSTANDARD_FIELD_NUMBER = 8;
    /**
     * <pre>
     *国标信息
     * </pre>
     *
     * <code>.NationalStandard nationalStandard = 8;</code>
     */
    public boolean hasNationalStandard() {
      return messageCase_ == 8;
    }
    /**
     * <pre>
     *国标信息
     * </pre>
     *
     * <code>.NationalStandard nationalStandard = 8;</code>
     */
    public NationalStandardOuterClass.NationalStandard getNationalStandard() {
      if (messageCase_ == 8) {
         return (NationalStandardOuterClass.NationalStandard) message_;
      }
      return NationalStandardOuterClass.NationalStandard.getDefaultInstance();
    }
    /**
     * <pre>
     *国标信息
     * </pre>
     *
     * <code>.NationalStandard nationalStandard = 8;</code>
     */
    public NationalStandardOuterClass.NationalStandardOrBuilder getNationalStandardOrBuilder() {
      if (messageCase_ == 8) {
         return (NationalStandardOuterClass.NationalStandard) message_;
      }
      return NationalStandardOuterClass.NationalStandard.getDefaultInstance();
    }

    public static final int ROADSIDENOTIFICATION_FIELD_NUMBER = 9;
    /**
     * <pre>
     *高速场景，具体内容参照文档"RoadSideNotification-数据结构.docx"
     * </pre>
     *
     * <code>string RoadSideNotification = 9;</code>
     */
    public String getRoadSideNotification() {
      Object ref = "";
      if (messageCase_ == 9) {
        ref = message_;
      }
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (messageCase_ == 9) {
          message_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *高速场景，具体内容参照文档"RoadSideNotification-数据结构.docx"
     * </pre>
     *
     * <code>string RoadSideNotification = 9;</code>
     */
    public com.google.protobuf.ByteString
        getRoadSideNotificationBytes() {
      Object ref = "";
      if (messageCase_ == 9) {
        ref = message_;
      }
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        if (messageCase_ == 9) {
          message_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STATIONINFORMATION_FIELD_NUMBER = 10;
    /**
     * <pre>
     *实时站点信息
     * </pre>
     *
     * <code>.StationInformation stationInformation = 10;</code>
     */
    public boolean hasStationInformation() {
      return messageCase_ == 10;
    }
    /**
     * <pre>
     *实时站点信息
     * </pre>
     *
     * <code>.StationInformation stationInformation = 10;</code>
     */
    public StationInformationOuterClass.StationInformation getStationInformation() {
      if (messageCase_ == 10) {
         return (StationInformationOuterClass.StationInformation) message_;
      }
      return StationInformationOuterClass.StationInformation.getDefaultInstance();
    }
    /**
     * <pre>
     *实时站点信息
     * </pre>
     *
     * <code>.StationInformation stationInformation = 10;</code>
     */
    public StationInformationOuterClass.StationInformationOrBuilder getStationInformationOrBuilder() {
      if (messageCase_ == 10) {
         return (StationInformationOuterClass.StationInformation) message_;
      }
      return StationInformationOuterClass.StationInformation.getDefaultInstance();
    }

    public static final int PCTS_FIELD_NUMBER = 11;
    /**
     * <pre>
     *车辆周围交通参与者信息
     * </pre>
     *
     * <code>.TrafficParticipants pcts = 11;</code>
     */
    public boolean hasPcts() {
      return messageCase_ == 11;
    }
    /**
     * <pre>
     *车辆周围交通参与者信息
     * </pre>
     *
     * <code>.TrafficParticipants pcts = 11;</code>
     */
    public TrafficParticipantOuterClass.TrafficParticipants getPcts() {
      if (messageCase_ == 11) {
         return (TrafficParticipantOuterClass.TrafficParticipants) message_;
      }
      return TrafficParticipantOuterClass.TrafficParticipants.getDefaultInstance();
    }
    /**
     * <pre>
     *车辆周围交通参与者信息
     * </pre>
     *
     * <code>.TrafficParticipants pcts = 11;</code>
     */
    public TrafficParticipantOuterClass.TrafficParticipantsOrBuilder getPctsOrBuilder() {
      if (messageCase_ == 11) {
         return (TrafficParticipantOuterClass.TrafficParticipants) message_;
      }
      return TrafficParticipantOuterClass.TrafficParticipants.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != HmiOuterClass.Hmi.DataType.UNKNOWN.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (id_ != 0) {
        output.writeInt32(2, id_);
      }
      if (messageCase_ == 3) {
        output.writeMessage(3, (VehicleOuterClass.Vehicle) message_);
      }
      if (messageCase_ == 4) {
        output.writeMessage(4, (TrafficLightOuterClass.TrafficLight) message_);
      }
      if (messageCase_ == 5) {
        output.writeMessage(5, (ObstacleOuterClass.Obstacle) message_);
      }
      if (messageCase_ == 6) {
        output.writeMessage(6, (DriveStateOuterClass.DriveState) message_);
      }
      if (messageCase_ == 7) {
        output.writeMessage(7, (InformationOuterClass.Information) message_);
      }
      if (messageCase_ == 8) {
        output.writeMessage(8, (NationalStandardOuterClass.NationalStandard) message_);
      }
      if (messageCase_ == 9) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, message_);
      }
      if (messageCase_ == 10) {
        output.writeMessage(10, (StationInformationOuterClass.StationInformation) message_);
      }
      if (messageCase_ == 11) {
        output.writeMessage(11, (TrafficParticipantOuterClass.TrafficParticipants) message_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != HmiOuterClass.Hmi.DataType.UNKNOWN.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (id_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, id_);
      }
      if (messageCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (VehicleOuterClass.Vehicle) message_);
      }
      if (messageCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (TrafficLightOuterClass.TrafficLight) message_);
      }
      if (messageCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, (ObstacleOuterClass.Obstacle) message_);
      }
      if (messageCase_ == 6) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, (DriveStateOuterClass.DriveState) message_);
      }
      if (messageCase_ == 7) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, (InformationOuterClass.Information) message_);
      }
      if (messageCase_ == 8) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, (NationalStandardOuterClass.NationalStandard) message_);
      }
      if (messageCase_ == 9) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, message_);
      }
      if (messageCase_ == 10) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, (StationInformationOuterClass.StationInformation) message_);
      }
      if (messageCase_ == 11) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, (TrafficParticipantOuterClass.TrafficParticipants) message_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof HmiOuterClass.Hmi)) {
        return super.equals(obj);
      }
      HmiOuterClass.Hmi other = (HmiOuterClass.Hmi) obj;

      boolean result = true;
      result = result && type_ == other.type_;
      result = result && (getId()
          == other.getId());
      result = result && getMessageCase().equals(
          other.getMessageCase());
      if (!result) return false;
      switch (messageCase_) {
        case 3:
          result = result && getVehicle()
              .equals(other.getVehicle());
          break;
        case 4:
          result = result && getTrafficLight()
              .equals(other.getTrafficLight());
          break;
        case 5:
          result = result && getObstacle()
              .equals(other.getObstacle());
          break;
        case 6:
          result = result && getDriveState()
              .equals(other.getDriveState());
          break;
        case 7:
          result = result && getInformation()
              .equals(other.getInformation());
          break;
        case 8:
          result = result && getNationalStandard()
              .equals(other.getNationalStandard());
          break;
        case 9:
          result = result && getRoadSideNotification()
              .equals(other.getRoadSideNotification());
          break;
        case 10:
          result = result && getStationInformation()
              .equals(other.getStationInformation());
          break;
        case 11:
          result = result && getPcts()
              .equals(other.getPcts());
          break;
        case 0:
        default:
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId();
      switch (messageCase_) {
        case 3:
          hash = (37 * hash) + VEHICLE_FIELD_NUMBER;
          hash = (53 * hash) + getVehicle().hashCode();
          break;
        case 4:
          hash = (37 * hash) + TRAFFICLIGHT_FIELD_NUMBER;
          hash = (53 * hash) + getTrafficLight().hashCode();
          break;
        case 5:
          hash = (37 * hash) + OBSTACLE_FIELD_NUMBER;
          hash = (53 * hash) + getObstacle().hashCode();
          break;
        case 6:
          hash = (37 * hash) + DRIVESTATE_FIELD_NUMBER;
          hash = (53 * hash) + getDriveState().hashCode();
          break;
        case 7:
          hash = (37 * hash) + INFORMATION_FIELD_NUMBER;
          hash = (53 * hash) + getInformation().hashCode();
          break;
        case 8:
          hash = (37 * hash) + NATIONALSTANDARD_FIELD_NUMBER;
          hash = (53 * hash) + getNationalStandard().hashCode();
          break;
        case 9:
          hash = (37 * hash) + ROADSIDENOTIFICATION_FIELD_NUMBER;
          hash = (53 * hash) + getRoadSideNotification().hashCode();
          break;
        case 10:
          hash = (37 * hash) + STATIONINFORMATION_FIELD_NUMBER;
          hash = (53 * hash) + getStationInformation().hashCode();
          break;
        case 11:
          hash = (37 * hash) + PCTS_FIELD_NUMBER;
          hash = (53 * hash) + getPcts().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static HmiOuterClass.Hmi parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static HmiOuterClass.Hmi parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static HmiOuterClass.Hmi parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static HmiOuterClass.Hmi parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static HmiOuterClass.Hmi parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static HmiOuterClass.Hmi parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static HmiOuterClass.Hmi parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static HmiOuterClass.Hmi parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static HmiOuterClass.Hmi parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static HmiOuterClass.Hmi parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static HmiOuterClass.Hmi parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static HmiOuterClass.Hmi parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(HmiOuterClass.Hmi prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Hmi}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Hmi)
        HmiOuterClass.HmiOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return HmiOuterClass.internal_static_Hmi_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return HmiOuterClass.internal_static_Hmi_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                HmiOuterClass.Hmi.class, HmiOuterClass.Hmi.Builder.class);
      }

      // Construct using HmiOuterClass.Hmi.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        type_ = 0;

        id_ = 0;

        messageCase_ = 0;
        message_ = null;
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return HmiOuterClass.internal_static_Hmi_descriptor;
      }

      public HmiOuterClass.Hmi getDefaultInstanceForType() {
        return HmiOuterClass.Hmi.getDefaultInstance();
      }

      public HmiOuterClass.Hmi build() {
        HmiOuterClass.Hmi result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public HmiOuterClass.Hmi buildPartial() {
        HmiOuterClass.Hmi result = new HmiOuterClass.Hmi(this);
        result.type_ = type_;
        result.id_ = id_;
        if (messageCase_ == 3) {
          if (vehicleBuilder_ == null) {
            result.message_ = message_;
          } else {
            result.message_ = vehicleBuilder_.build();
          }
        }
        if (messageCase_ == 4) {
          if (trafficLightBuilder_ == null) {
            result.message_ = message_;
          } else {
            result.message_ = trafficLightBuilder_.build();
          }
        }
        if (messageCase_ == 5) {
          if (obstacleBuilder_ == null) {
            result.message_ = message_;
          } else {
            result.message_ = obstacleBuilder_.build();
          }
        }
        if (messageCase_ == 6) {
          if (driveStateBuilder_ == null) {
            result.message_ = message_;
          } else {
            result.message_ = driveStateBuilder_.build();
          }
        }
        if (messageCase_ == 7) {
          if (informationBuilder_ == null) {
            result.message_ = message_;
          } else {
            result.message_ = informationBuilder_.build();
          }
        }
        if (messageCase_ == 8) {
          if (nationalStandardBuilder_ == null) {
            result.message_ = message_;
          } else {
            result.message_ = nationalStandardBuilder_.build();
          }
        }
        if (messageCase_ == 9) {
          result.message_ = message_;
        }
        if (messageCase_ == 10) {
          if (stationInformationBuilder_ == null) {
            result.message_ = message_;
          } else {
            result.message_ = stationInformationBuilder_.build();
          }
        }
        if (messageCase_ == 11) {
          if (pctsBuilder_ == null) {
            result.message_ = message_;
          } else {
            result.message_ = pctsBuilder_.build();
          }
        }
        result.messageCase_ = messageCase_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof HmiOuterClass.Hmi) {
          return mergeFrom((HmiOuterClass.Hmi)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(HmiOuterClass.Hmi other) {
        if (other == HmiOuterClass.Hmi.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.getId() != 0) {
          setId(other.getId());
        }
        switch (other.getMessageCase()) {
          case VEHICLE: {
            mergeVehicle(other.getVehicle());
            break;
          }
          case TRAFFICLIGHT: {
            mergeTrafficLight(other.getTrafficLight());
            break;
          }
          case OBSTACLE: {
            mergeObstacle(other.getObstacle());
            break;
          }
          case DRIVESTATE: {
            mergeDriveState(other.getDriveState());
            break;
          }
          case INFORMATION: {
            mergeInformation(other.getInformation());
            break;
          }
          case NATIONALSTANDARD: {
            mergeNationalStandard(other.getNationalStandard());
            break;
          }
          case ROADSIDENOTIFICATION: {
            messageCase_ = 9;
            message_ = other.message_;
            onChanged();
            break;
          }
          case STATIONINFORMATION: {
            mergeStationInformation(other.getStationInformation());
            break;
          }
          case PCTS: {
            mergePcts(other.getPcts());
            break;
          }
          case MESSAGE_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        HmiOuterClass.Hmi parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (HmiOuterClass.Hmi) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int messageCase_ = 0;
      private Object message_;
      public MessageCase
          getMessageCase() {
        return MessageCase.forNumber(
            messageCase_);
      }

      public Builder clearMessage() {
        messageCase_ = 0;
        message_ = null;
        onChanged();
        return this;
      }


      private int type_ = 0;
      /**
       * <pre>
       *消息类型
       * </pre>
       *
       * <code>.Hmi.DataType type = 1;</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       *消息类型
       * </pre>
       *
       * <code>.Hmi.DataType type = 1;</code>
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *消息类型
       * </pre>
       *
       * <code>.Hmi.DataType type = 1;</code>
       */
      public HmiOuterClass.Hmi.DataType getType() {
        HmiOuterClass.Hmi.DataType result = HmiOuterClass.Hmi.DataType.valueOf(type_);
        return result == null ? HmiOuterClass.Hmi.DataType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       *消息类型
       * </pre>
       *
       * <code>.Hmi.DataType type = 1;</code>
       */
      public Builder setType(HmiOuterClass.Hmi.DataType value) {
        if (value == null) {
          throw new NullPointerException();
        }

        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *消息类型
       * </pre>
       *
       * <code>.Hmi.DataType type = 1;</code>
       */
      public Builder clearType() {

        type_ = 0;
        onChanged();
        return this;
      }

      private int id_ ;
      /**
       * <pre>
       *消息序列号
       * </pre>
       *
       * <code>int32 id = 2;</code>
       */
      public int getId() {
        return id_;
      }
      /**
       * <pre>
       *消息序列号
       * </pre>
       *
       * <code>int32 id = 2;</code>
       */
      public Builder setId(int value) {

        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *消息序列号
       * </pre>
       *
       * <code>int32 id = 2;</code>
       */
      public Builder clearId() {

        id_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          VehicleOuterClass.Vehicle, VehicleOuterClass.Vehicle.Builder, VehicleOuterClass.VehicleOrBuilder> vehicleBuilder_;
      /**
       * <pre>
       *车辆信息
       * </pre>
       *
       * <code>.Vehicle vehicle = 3;</code>
       */
      public boolean hasVehicle() {
        return messageCase_ == 3;
      }
      /**
       * <pre>
       *车辆信息
       * </pre>
       *
       * <code>.Vehicle vehicle = 3;</code>
       */
      public VehicleOuterClass.Vehicle getVehicle() {
        if (vehicleBuilder_ == null) {
          if (messageCase_ == 3) {
            return (VehicleOuterClass.Vehicle) message_;
          }
          return VehicleOuterClass.Vehicle.getDefaultInstance();
        } else {
          if (messageCase_ == 3) {
            return vehicleBuilder_.getMessage();
          }
          return VehicleOuterClass.Vehicle.getDefaultInstance();
        }
      }
      /**
       * <pre>
       *车辆信息
       * </pre>
       *
       * <code>.Vehicle vehicle = 3;</code>
       */
      public Builder setVehicle(VehicleOuterClass.Vehicle value) {
        if (vehicleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          message_ = value;
          onChanged();
        } else {
          vehicleBuilder_.setMessage(value);
        }
        messageCase_ = 3;
        return this;
      }
      /**
       * <pre>
       *车辆信息
       * </pre>
       *
       * <code>.Vehicle vehicle = 3;</code>
       */
      public Builder setVehicle(
          VehicleOuterClass.Vehicle.Builder builderForValue) {
        if (vehicleBuilder_ == null) {
          message_ = builderForValue.build();
          onChanged();
        } else {
          vehicleBuilder_.setMessage(builderForValue.build());
        }
        messageCase_ = 3;
        return this;
      }
      /**
       * <pre>
       *车辆信息
       * </pre>
       *
       * <code>.Vehicle vehicle = 3;</code>
       */
      public Builder mergeVehicle(VehicleOuterClass.Vehicle value) {
        if (vehicleBuilder_ == null) {
          if (messageCase_ == 3 &&
              message_ != VehicleOuterClass.Vehicle.getDefaultInstance()) {
            message_ = VehicleOuterClass.Vehicle.newBuilder((VehicleOuterClass.Vehicle) message_)
                .mergeFrom(value).buildPartial();
          } else {
            message_ = value;
          }
          onChanged();
        } else {
          if (messageCase_ == 3) {
            vehicleBuilder_.mergeFrom(value);
          }
          vehicleBuilder_.setMessage(value);
        }
        messageCase_ = 3;
        return this;
      }
      /**
       * <pre>
       *车辆信息
       * </pre>
       *
       * <code>.Vehicle vehicle = 3;</code>
       */
      public Builder clearVehicle() {
        if (vehicleBuilder_ == null) {
          if (messageCase_ == 3) {
            messageCase_ = 0;
            message_ = null;
            onChanged();
          }
        } else {
          if (messageCase_ == 3) {
            messageCase_ = 0;
            message_ = null;
          }
          vehicleBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *车辆信息
       * </pre>
       *
       * <code>.Vehicle vehicle = 3;</code>
       */
      public VehicleOuterClass.Vehicle.Builder getVehicleBuilder() {
        return getVehicleFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *车辆信息
       * </pre>
       *
       * <code>.Vehicle vehicle = 3;</code>
       */
      public VehicleOuterClass.VehicleOrBuilder getVehicleOrBuilder() {
        if ((messageCase_ == 3) && (vehicleBuilder_ != null)) {
          return vehicleBuilder_.getMessageOrBuilder();
        } else {
          if (messageCase_ == 3) {
            return (VehicleOuterClass.Vehicle) message_;
          }
          return VehicleOuterClass.Vehicle.getDefaultInstance();
        }
      }
      /**
       * <pre>
       *车辆信息
       * </pre>
       *
       * <code>.Vehicle vehicle = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          VehicleOuterClass.Vehicle, VehicleOuterClass.Vehicle.Builder, VehicleOuterClass.VehicleOrBuilder>
          getVehicleFieldBuilder() {
        if (vehicleBuilder_ == null) {
          if (!(messageCase_ == 3)) {
            message_ = VehicleOuterClass.Vehicle.getDefaultInstance();
          }
          vehicleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              VehicleOuterClass.Vehicle, VehicleOuterClass.Vehicle.Builder, VehicleOuterClass.VehicleOrBuilder>(
                  (VehicleOuterClass.Vehicle) message_,
                  getParentForChildren(),
                  isClean());
          message_ = null;
        }
        messageCase_ = 3;
        onChanged();;
        return vehicleBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          TrafficLightOuterClass.TrafficLight, TrafficLightOuterClass.TrafficLight.Builder, TrafficLightOuterClass.TrafficLightOrBuilder> trafficLightBuilder_;
      /**
       * <pre>
       *红绿灯信息
       * </pre>
       *
       * <code>.TrafficLight trafficLight = 4;</code>
       */
      public boolean hasTrafficLight() {
        return messageCase_ == 4;
      }
      /**
       * <pre>
       *红绿灯信息
       * </pre>
       *
       * <code>.TrafficLight trafficLight = 4;</code>
       */
      public TrafficLightOuterClass.TrafficLight getTrafficLight() {
        if (trafficLightBuilder_ == null) {
          if (messageCase_ == 4) {
            return (TrafficLightOuterClass.TrafficLight) message_;
          }
          return TrafficLightOuterClass.TrafficLight.getDefaultInstance();
        } else {
          if (messageCase_ == 4) {
            return trafficLightBuilder_.getMessage();
          }
          return TrafficLightOuterClass.TrafficLight.getDefaultInstance();
        }
      }
      /**
       * <pre>
       *红绿灯信息
       * </pre>
       *
       * <code>.TrafficLight trafficLight = 4;</code>
       */
      public Builder setTrafficLight(TrafficLightOuterClass.TrafficLight value) {
        if (trafficLightBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          message_ = value;
          onChanged();
        } else {
          trafficLightBuilder_.setMessage(value);
        }
        messageCase_ = 4;
        return this;
      }
      /**
       * <pre>
       *红绿灯信息
       * </pre>
       *
       * <code>.TrafficLight trafficLight = 4;</code>
       */
      public Builder setTrafficLight(
          TrafficLightOuterClass.TrafficLight.Builder builderForValue) {
        if (trafficLightBuilder_ == null) {
          message_ = builderForValue.build();
          onChanged();
        } else {
          trafficLightBuilder_.setMessage(builderForValue.build());
        }
        messageCase_ = 4;
        return this;
      }
      /**
       * <pre>
       *红绿灯信息
       * </pre>
       *
       * <code>.TrafficLight trafficLight = 4;</code>
       */
      public Builder mergeTrafficLight(TrafficLightOuterClass.TrafficLight value) {
        if (trafficLightBuilder_ == null) {
          if (messageCase_ == 4 &&
              message_ != TrafficLightOuterClass.TrafficLight.getDefaultInstance()) {
            message_ = TrafficLightOuterClass.TrafficLight.newBuilder((TrafficLightOuterClass.TrafficLight) message_)
                .mergeFrom(value).buildPartial();
          } else {
            message_ = value;
          }
          onChanged();
        } else {
          if (messageCase_ == 4) {
            trafficLightBuilder_.mergeFrom(value);
          }
          trafficLightBuilder_.setMessage(value);
        }
        messageCase_ = 4;
        return this;
      }
      /**
       * <pre>
       *红绿灯信息
       * </pre>
       *
       * <code>.TrafficLight trafficLight = 4;</code>
       */
      public Builder clearTrafficLight() {
        if (trafficLightBuilder_ == null) {
          if (messageCase_ == 4) {
            messageCase_ = 0;
            message_ = null;
            onChanged();
          }
        } else {
          if (messageCase_ == 4) {
            messageCase_ = 0;
            message_ = null;
          }
          trafficLightBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *红绿灯信息
       * </pre>
       *
       * <code>.TrafficLight trafficLight = 4;</code>
       */
      public TrafficLightOuterClass.TrafficLight.Builder getTrafficLightBuilder() {
        return getTrafficLightFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *红绿灯信息
       * </pre>
       *
       * <code>.TrafficLight trafficLight = 4;</code>
       */
      public TrafficLightOuterClass.TrafficLightOrBuilder getTrafficLightOrBuilder() {
        if ((messageCase_ == 4) && (trafficLightBuilder_ != null)) {
          return trafficLightBuilder_.getMessageOrBuilder();
        } else {
          if (messageCase_ == 4) {
            return (TrafficLightOuterClass.TrafficLight) message_;
          }
          return TrafficLightOuterClass.TrafficLight.getDefaultInstance();
        }
      }
      /**
       * <pre>
       *红绿灯信息
       * </pre>
       *
       * <code>.TrafficLight trafficLight = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          TrafficLightOuterClass.TrafficLight, TrafficLightOuterClass.TrafficLight.Builder, TrafficLightOuterClass.TrafficLightOrBuilder>
          getTrafficLightFieldBuilder() {
        if (trafficLightBuilder_ == null) {
          if (!(messageCase_ == 4)) {
            message_ = TrafficLightOuterClass.TrafficLight.getDefaultInstance();
          }
          trafficLightBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              TrafficLightOuterClass.TrafficLight, TrafficLightOuterClass.TrafficLight.Builder, TrafficLightOuterClass.TrafficLightOrBuilder>(
                  (TrafficLightOuterClass.TrafficLight) message_,
                  getParentForChildren(),
                  isClean());
          message_ = null;
        }
        messageCase_ = 4;
        onChanged();;
        return trafficLightBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          ObstacleOuterClass.Obstacle, ObstacleOuterClass.Obstacle.Builder, ObstacleOuterClass.ObstacleOrBuilder> obstacleBuilder_;
      /**
       * <pre>
       *障碍物信息
       * </pre>
       *
       * <code>.Obstacle obstacle = 5;</code>
       */
      public boolean hasObstacle() {
        return messageCase_ == 5;
      }
      /**
       * <pre>
       *障碍物信息
       * </pre>
       *
       * <code>.Obstacle obstacle = 5;</code>
       */
      public ObstacleOuterClass.Obstacle getObstacle() {
        if (obstacleBuilder_ == null) {
          if (messageCase_ == 5) {
            return (ObstacleOuterClass.Obstacle) message_;
          }
          return ObstacleOuterClass.Obstacle.getDefaultInstance();
        } else {
          if (messageCase_ == 5) {
            return obstacleBuilder_.getMessage();
          }
          return ObstacleOuterClass.Obstacle.getDefaultInstance();
        }
      }
      /**
       * <pre>
       *障碍物信息
       * </pre>
       *
       * <code>.Obstacle obstacle = 5;</code>
       */
      public Builder setObstacle(ObstacleOuterClass.Obstacle value) {
        if (obstacleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          message_ = value;
          onChanged();
        } else {
          obstacleBuilder_.setMessage(value);
        }
        messageCase_ = 5;
        return this;
      }
      /**
       * <pre>
       *障碍物信息
       * </pre>
       *
       * <code>.Obstacle obstacle = 5;</code>
       */
      public Builder setObstacle(
          ObstacleOuterClass.Obstacle.Builder builderForValue) {
        if (obstacleBuilder_ == null) {
          message_ = builderForValue.build();
          onChanged();
        } else {
          obstacleBuilder_.setMessage(builderForValue.build());
        }
        messageCase_ = 5;
        return this;
      }
      /**
       * <pre>
       *障碍物信息
       * </pre>
       *
       * <code>.Obstacle obstacle = 5;</code>
       */
      public Builder mergeObstacle(ObstacleOuterClass.Obstacle value) {
        if (obstacleBuilder_ == null) {
          if (messageCase_ == 5 &&
              message_ != ObstacleOuterClass.Obstacle.getDefaultInstance()) {
            message_ = ObstacleOuterClass.Obstacle.newBuilder((ObstacleOuterClass.Obstacle) message_)
                .mergeFrom(value).buildPartial();
          } else {
            message_ = value;
          }
          onChanged();
        } else {
          if (messageCase_ == 5) {
            obstacleBuilder_.mergeFrom(value);
          }
          obstacleBuilder_.setMessage(value);
        }
        messageCase_ = 5;
        return this;
      }
      /**
       * <pre>
       *障碍物信息
       * </pre>
       *
       * <code>.Obstacle obstacle = 5;</code>
       */
      public Builder clearObstacle() {
        if (obstacleBuilder_ == null) {
          if (messageCase_ == 5) {
            messageCase_ = 0;
            message_ = null;
            onChanged();
          }
        } else {
          if (messageCase_ == 5) {
            messageCase_ = 0;
            message_ = null;
          }
          obstacleBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *障碍物信息
       * </pre>
       *
       * <code>.Obstacle obstacle = 5;</code>
       */
      public ObstacleOuterClass.Obstacle.Builder getObstacleBuilder() {
        return getObstacleFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *障碍物信息
       * </pre>
       *
       * <code>.Obstacle obstacle = 5;</code>
       */
      public ObstacleOuterClass.ObstacleOrBuilder getObstacleOrBuilder() {
        if ((messageCase_ == 5) && (obstacleBuilder_ != null)) {
          return obstacleBuilder_.getMessageOrBuilder();
        } else {
          if (messageCase_ == 5) {
            return (ObstacleOuterClass.Obstacle) message_;
          }
          return ObstacleOuterClass.Obstacle.getDefaultInstance();
        }
      }
      /**
       * <pre>
       *障碍物信息
       * </pre>
       *
       * <code>.Obstacle obstacle = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          ObstacleOuterClass.Obstacle, ObstacleOuterClass.Obstacle.Builder, ObstacleOuterClass.ObstacleOrBuilder>
          getObstacleFieldBuilder() {
        if (obstacleBuilder_ == null) {
          if (!(messageCase_ == 5)) {
            message_ = ObstacleOuterClass.Obstacle.getDefaultInstance();
          }
          obstacleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              ObstacleOuterClass.Obstacle, ObstacleOuterClass.Obstacle.Builder, ObstacleOuterClass.ObstacleOrBuilder>(
                  (ObstacleOuterClass.Obstacle) message_,
                  getParentForChildren(),
                  isClean());
          message_ = null;
        }
        messageCase_ = 5;
        onChanged();;
        return obstacleBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          DriveStateOuterClass.DriveState, DriveStateOuterClass.DriveState.Builder, DriveStateOuterClass.DriveStateOrBuilder> driveStateBuilder_;
      /**
       * <pre>
       *驾驶状态消息
       * </pre>
       *
       * <code>.DriveState driveState = 6;</code>
       */
      public boolean hasDriveState() {
        return messageCase_ == 6;
      }
      /**
       * <pre>
       *驾驶状态消息
       * </pre>
       *
       * <code>.DriveState driveState = 6;</code>
       */
      public DriveStateOuterClass.DriveState getDriveState() {
        if (driveStateBuilder_ == null) {
          if (messageCase_ == 6) {
            return (DriveStateOuterClass.DriveState) message_;
          }
          return DriveStateOuterClass.DriveState.getDefaultInstance();
        } else {
          if (messageCase_ == 6) {
            return driveStateBuilder_.getMessage();
          }
          return DriveStateOuterClass.DriveState.getDefaultInstance();
        }
      }
      /**
       * <pre>
       *驾驶状态消息
       * </pre>
       *
       * <code>.DriveState driveState = 6;</code>
       */
      public Builder setDriveState(DriveStateOuterClass.DriveState value) {
        if (driveStateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          message_ = value;
          onChanged();
        } else {
          driveStateBuilder_.setMessage(value);
        }
        messageCase_ = 6;
        return this;
      }
      /**
       * <pre>
       *驾驶状态消息
       * </pre>
       *
       * <code>.DriveState driveState = 6;</code>
       */
      public Builder setDriveState(
          DriveStateOuterClass.DriveState.Builder builderForValue) {
        if (driveStateBuilder_ == null) {
          message_ = builderForValue.build();
          onChanged();
        } else {
          driveStateBuilder_.setMessage(builderForValue.build());
        }
        messageCase_ = 6;
        return this;
      }
      /**
       * <pre>
       *驾驶状态消息
       * </pre>
       *
       * <code>.DriveState driveState = 6;</code>
       */
      public Builder mergeDriveState(DriveStateOuterClass.DriveState value) {
        if (driveStateBuilder_ == null) {
          if (messageCase_ == 6 &&
              message_ != DriveStateOuterClass.DriveState.getDefaultInstance()) {
            message_ = DriveStateOuterClass.DriveState.newBuilder((DriveStateOuterClass.DriveState) message_)
                .mergeFrom(value).buildPartial();
          } else {
            message_ = value;
          }
          onChanged();
        } else {
          if (messageCase_ == 6) {
            driveStateBuilder_.mergeFrom(value);
          }
          driveStateBuilder_.setMessage(value);
        }
        messageCase_ = 6;
        return this;
      }
      /**
       * <pre>
       *驾驶状态消息
       * </pre>
       *
       * <code>.DriveState driveState = 6;</code>
       */
      public Builder clearDriveState() {
        if (driveStateBuilder_ == null) {
          if (messageCase_ == 6) {
            messageCase_ = 0;
            message_ = null;
            onChanged();
          }
        } else {
          if (messageCase_ == 6) {
            messageCase_ = 0;
            message_ = null;
          }
          driveStateBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *驾驶状态消息
       * </pre>
       *
       * <code>.DriveState driveState = 6;</code>
       */
      public DriveStateOuterClass.DriveState.Builder getDriveStateBuilder() {
        return getDriveStateFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *驾驶状态消息
       * </pre>
       *
       * <code>.DriveState driveState = 6;</code>
       */
      public DriveStateOuterClass.DriveStateOrBuilder getDriveStateOrBuilder() {
        if ((messageCase_ == 6) && (driveStateBuilder_ != null)) {
          return driveStateBuilder_.getMessageOrBuilder();
        } else {
          if (messageCase_ == 6) {
            return (DriveStateOuterClass.DriveState) message_;
          }
          return DriveStateOuterClass.DriveState.getDefaultInstance();
        }
      }
      /**
       * <pre>
       *驾驶状态消息
       * </pre>
       *
       * <code>.DriveState driveState = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          DriveStateOuterClass.DriveState, DriveStateOuterClass.DriveState.Builder, DriveStateOuterClass.DriveStateOrBuilder>
          getDriveStateFieldBuilder() {
        if (driveStateBuilder_ == null) {
          if (!(messageCase_ == 6)) {
            message_ = DriveStateOuterClass.DriveState.getDefaultInstance();
          }
          driveStateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              DriveStateOuterClass.DriveState, DriveStateOuterClass.DriveState.Builder, DriveStateOuterClass.DriveStateOrBuilder>(
                  (DriveStateOuterClass.DriveState) message_,
                  getParentForChildren(),
                  isClean());
          message_ = null;
        }
        messageCase_ = 6;
        onChanged();;
        return driveStateBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          InformationOuterClass.Information, InformationOuterClass.Information.Builder, InformationOuterClass.InformationOrBuilder> informationBuilder_;
      /**
       * <pre>
       *语音提示消息
       * </pre>
       *
       * <code>.Information information = 7;</code>
       */
      public boolean hasInformation() {
        return messageCase_ == 7;
      }
      /**
       * <pre>
       *语音提示消息
       * </pre>
       *
       * <code>.Information information = 7;</code>
       */
      public InformationOuterClass.Information getInformation() {
        if (informationBuilder_ == null) {
          if (messageCase_ == 7) {
            return (InformationOuterClass.Information) message_;
          }
          return InformationOuterClass.Information.getDefaultInstance();
        } else {
          if (messageCase_ == 7) {
            return informationBuilder_.getMessage();
          }
          return InformationOuterClass.Information.getDefaultInstance();
        }
      }
      /**
       * <pre>
       *语音提示消息
       * </pre>
       *
       * <code>.Information information = 7;</code>
       */
      public Builder setInformation(InformationOuterClass.Information value) {
        if (informationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          message_ = value;
          onChanged();
        } else {
          informationBuilder_.setMessage(value);
        }
        messageCase_ = 7;
        return this;
      }
      /**
       * <pre>
       *语音提示消息
       * </pre>
       *
       * <code>.Information information = 7;</code>
       */
      public Builder setInformation(
          InformationOuterClass.Information.Builder builderForValue) {
        if (informationBuilder_ == null) {
          message_ = builderForValue.build();
          onChanged();
        } else {
          informationBuilder_.setMessage(builderForValue.build());
        }
        messageCase_ = 7;
        return this;
      }
      /**
       * <pre>
       *语音提示消息
       * </pre>
       *
       * <code>.Information information = 7;</code>
       */
      public Builder mergeInformation(InformationOuterClass.Information value) {
        if (informationBuilder_ == null) {
          if (messageCase_ == 7 &&
              message_ != InformationOuterClass.Information.getDefaultInstance()) {
            message_ = InformationOuterClass.Information.newBuilder((InformationOuterClass.Information) message_)
                .mergeFrom(value).buildPartial();
          } else {
            message_ = value;
          }
          onChanged();
        } else {
          if (messageCase_ == 7) {
            informationBuilder_.mergeFrom(value);
          }
          informationBuilder_.setMessage(value);
        }
        messageCase_ = 7;
        return this;
      }
      /**
       * <pre>
       *语音提示消息
       * </pre>
       *
       * <code>.Information information = 7;</code>
       */
      public Builder clearInformation() {
        if (informationBuilder_ == null) {
          if (messageCase_ == 7) {
            messageCase_ = 0;
            message_ = null;
            onChanged();
          }
        } else {
          if (messageCase_ == 7) {
            messageCase_ = 0;
            message_ = null;
          }
          informationBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *语音提示消息
       * </pre>
       *
       * <code>.Information information = 7;</code>
       */
      public InformationOuterClass.Information.Builder getInformationBuilder() {
        return getInformationFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *语音提示消息
       * </pre>
       *
       * <code>.Information information = 7;</code>
       */
      public InformationOuterClass.InformationOrBuilder getInformationOrBuilder() {
        if ((messageCase_ == 7) && (informationBuilder_ != null)) {
          return informationBuilder_.getMessageOrBuilder();
        } else {
          if (messageCase_ == 7) {
            return (InformationOuterClass.Information) message_;
          }
          return InformationOuterClass.Information.getDefaultInstance();
        }
      }
      /**
       * <pre>
       *语音提示消息
       * </pre>
       *
       * <code>.Information information = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          InformationOuterClass.Information, InformationOuterClass.Information.Builder, InformationOuterClass.InformationOrBuilder>
          getInformationFieldBuilder() {
        if (informationBuilder_ == null) {
          if (!(messageCase_ == 7)) {
            message_ = InformationOuterClass.Information.getDefaultInstance();
          }
          informationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              InformationOuterClass.Information, InformationOuterClass.Information.Builder, InformationOuterClass.InformationOrBuilder>(
                  (InformationOuterClass.Information) message_,
                  getParentForChildren(),
                  isClean());
          message_ = null;
        }
        messageCase_ = 7;
        onChanged();;
        return informationBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          NationalStandardOuterClass.NationalStandard, NationalStandardOuterClass.NationalStandard.Builder, NationalStandardOuterClass.NationalStandardOrBuilder> nationalStandardBuilder_;
      /**
       * <pre>
       *国标信息
       * </pre>
       *
       * <code>.NationalStandard nationalStandard = 8;</code>
       */
      public boolean hasNationalStandard() {
        return messageCase_ == 8;
      }
      /**
       * <pre>
       *国标信息
       * </pre>
       *
       * <code>.NationalStandard nationalStandard = 8;</code>
       */
      public NationalStandardOuterClass.NationalStandard getNationalStandard() {
        if (nationalStandardBuilder_ == null) {
          if (messageCase_ == 8) {
            return (NationalStandardOuterClass.NationalStandard) message_;
          }
          return NationalStandardOuterClass.NationalStandard.getDefaultInstance();
        } else {
          if (messageCase_ == 8) {
            return nationalStandardBuilder_.getMessage();
          }
          return NationalStandardOuterClass.NationalStandard.getDefaultInstance();
        }
      }
      /**
       * <pre>
       *国标信息
       * </pre>
       *
       * <code>.NationalStandard nationalStandard = 8;</code>
       */
      public Builder setNationalStandard(NationalStandardOuterClass.NationalStandard value) {
        if (nationalStandardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          message_ = value;
          onChanged();
        } else {
          nationalStandardBuilder_.setMessage(value);
        }
        messageCase_ = 8;
        return this;
      }
      /**
       * <pre>
       *国标信息
       * </pre>
       *
       * <code>.NationalStandard nationalStandard = 8;</code>
       */
      public Builder setNationalStandard(
          NationalStandardOuterClass.NationalStandard.Builder builderForValue) {
        if (nationalStandardBuilder_ == null) {
          message_ = builderForValue.build();
          onChanged();
        } else {
          nationalStandardBuilder_.setMessage(builderForValue.build());
        }
        messageCase_ = 8;
        return this;
      }
      /**
       * <pre>
       *国标信息
       * </pre>
       *
       * <code>.NationalStandard nationalStandard = 8;</code>
       */
      public Builder mergeNationalStandard(NationalStandardOuterClass.NationalStandard value) {
        if (nationalStandardBuilder_ == null) {
          if (messageCase_ == 8 &&
              message_ != NationalStandardOuterClass.NationalStandard.getDefaultInstance()) {
            message_ = NationalStandardOuterClass.NationalStandard.newBuilder((NationalStandardOuterClass.NationalStandard) message_)
                .mergeFrom(value).buildPartial();
          } else {
            message_ = value;
          }
          onChanged();
        } else {
          if (messageCase_ == 8) {
            nationalStandardBuilder_.mergeFrom(value);
          }
          nationalStandardBuilder_.setMessage(value);
        }
        messageCase_ = 8;
        return this;
      }
      /**
       * <pre>
       *国标信息
       * </pre>
       *
       * <code>.NationalStandard nationalStandard = 8;</code>
       */
      public Builder clearNationalStandard() {
        if (nationalStandardBuilder_ == null) {
          if (messageCase_ == 8) {
            messageCase_ = 0;
            message_ = null;
            onChanged();
          }
        } else {
          if (messageCase_ == 8) {
            messageCase_ = 0;
            message_ = null;
          }
          nationalStandardBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *国标信息
       * </pre>
       *
       * <code>.NationalStandard nationalStandard = 8;</code>
       */
      public NationalStandardOuterClass.NationalStandard.Builder getNationalStandardBuilder() {
        return getNationalStandardFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *国标信息
       * </pre>
       *
       * <code>.NationalStandard nationalStandard = 8;</code>
       */
      public NationalStandardOuterClass.NationalStandardOrBuilder getNationalStandardOrBuilder() {
        if ((messageCase_ == 8) && (nationalStandardBuilder_ != null)) {
          return nationalStandardBuilder_.getMessageOrBuilder();
        } else {
          if (messageCase_ == 8) {
            return (NationalStandardOuterClass.NationalStandard) message_;
          }
          return NationalStandardOuterClass.NationalStandard.getDefaultInstance();
        }
      }
      /**
       * <pre>
       *国标信息
       * </pre>
       *
       * <code>.NationalStandard nationalStandard = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          NationalStandardOuterClass.NationalStandard, NationalStandardOuterClass.NationalStandard.Builder, NationalStandardOuterClass.NationalStandardOrBuilder>
          getNationalStandardFieldBuilder() {
        if (nationalStandardBuilder_ == null) {
          if (!(messageCase_ == 8)) {
            message_ = NationalStandardOuterClass.NationalStandard.getDefaultInstance();
          }
          nationalStandardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              NationalStandardOuterClass.NationalStandard, NationalStandardOuterClass.NationalStandard.Builder, NationalStandardOuterClass.NationalStandardOrBuilder>(
                  (NationalStandardOuterClass.NationalStandard) message_,
                  getParentForChildren(),
                  isClean());
          message_ = null;
        }
        messageCase_ = 8;
        onChanged();;
        return nationalStandardBuilder_;
      }

      /**
       * <pre>
       *高速场景，具体内容参照文档"RoadSideNotification-数据结构.docx"
       * </pre>
       *
       * <code>string RoadSideNotification = 9;</code>
       */
      public String getRoadSideNotification() {
        Object ref = "";
        if (messageCase_ == 9) {
          ref = message_;
        }
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (messageCase_ == 9) {
            message_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *高速场景，具体内容参照文档"RoadSideNotification-数据结构.docx"
       * </pre>
       *
       * <code>string RoadSideNotification = 9;</code>
       */
      public com.google.protobuf.ByteString
          getRoadSideNotificationBytes() {
        Object ref = "";
        if (messageCase_ == 9) {
          ref = message_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          if (messageCase_ == 9) {
            message_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *高速场景，具体内容参照文档"RoadSideNotification-数据结构.docx"
       * </pre>
       *
       * <code>string RoadSideNotification = 9;</code>
       */
      public Builder setRoadSideNotification(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  messageCase_ = 9;
        message_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *高速场景，具体内容参照文档"RoadSideNotification-数据结构.docx"
       * </pre>
       *
       * <code>string RoadSideNotification = 9;</code>
       */
      public Builder clearRoadSideNotification() {
        if (messageCase_ == 9) {
          messageCase_ = 0;
          message_ = null;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       *高速场景，具体内容参照文档"RoadSideNotification-数据结构.docx"
       * </pre>
       *
       * <code>string RoadSideNotification = 9;</code>
       */
      public Builder setRoadSideNotificationBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        messageCase_ = 9;
        message_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          StationInformationOuterClass.StationInformation, StationInformationOuterClass.StationInformation.Builder, StationInformationOuterClass.StationInformationOrBuilder> stationInformationBuilder_;
      /**
       * <pre>
       *实时站点信息
       * </pre>
       *
       * <code>.StationInformation stationInformation = 10;</code>
       */
      public boolean hasStationInformation() {
        return messageCase_ == 10;
      }
      /**
       * <pre>
       *实时站点信息
       * </pre>
       *
       * <code>.StationInformation stationInformation = 10;</code>
       */
      public StationInformationOuterClass.StationInformation getStationInformation() {
        if (stationInformationBuilder_ == null) {
          if (messageCase_ == 10) {
            return (StationInformationOuterClass.StationInformation) message_;
          }
          return StationInformationOuterClass.StationInformation.getDefaultInstance();
        } else {
          if (messageCase_ == 10) {
            return stationInformationBuilder_.getMessage();
          }
          return StationInformationOuterClass.StationInformation.getDefaultInstance();
        }
      }
      /**
       * <pre>
       *实时站点信息
       * </pre>
       *
       * <code>.StationInformation stationInformation = 10;</code>
       */
      public Builder setStationInformation(StationInformationOuterClass.StationInformation value) {
        if (stationInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          message_ = value;
          onChanged();
        } else {
          stationInformationBuilder_.setMessage(value);
        }
        messageCase_ = 10;
        return this;
      }
      /**
       * <pre>
       *实时站点信息
       * </pre>
       *
       * <code>.StationInformation stationInformation = 10;</code>
       */
      public Builder setStationInformation(
          StationInformationOuterClass.StationInformation.Builder builderForValue) {
        if (stationInformationBuilder_ == null) {
          message_ = builderForValue.build();
          onChanged();
        } else {
          stationInformationBuilder_.setMessage(builderForValue.build());
        }
        messageCase_ = 10;
        return this;
      }
      /**
       * <pre>
       *实时站点信息
       * </pre>
       *
       * <code>.StationInformation stationInformation = 10;</code>
       */
      public Builder mergeStationInformation(StationInformationOuterClass.StationInformation value) {
        if (stationInformationBuilder_ == null) {
          if (messageCase_ == 10 &&
              message_ != StationInformationOuterClass.StationInformation.getDefaultInstance()) {
            message_ = StationInformationOuterClass.StationInformation.newBuilder((StationInformationOuterClass.StationInformation) message_)
                .mergeFrom(value).buildPartial();
          } else {
            message_ = value;
          }
          onChanged();
        } else {
          if (messageCase_ == 10) {
            stationInformationBuilder_.mergeFrom(value);
          }
          stationInformationBuilder_.setMessage(value);
        }
        messageCase_ = 10;
        return this;
      }
      /**
       * <pre>
       *实时站点信息
       * </pre>
       *
       * <code>.StationInformation stationInformation = 10;</code>
       */
      public Builder clearStationInformation() {
        if (stationInformationBuilder_ == null) {
          if (messageCase_ == 10) {
            messageCase_ = 0;
            message_ = null;
            onChanged();
          }
        } else {
          if (messageCase_ == 10) {
            messageCase_ = 0;
            message_ = null;
          }
          stationInformationBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *实时站点信息
       * </pre>
       *
       * <code>.StationInformation stationInformation = 10;</code>
       */
      public StationInformationOuterClass.StationInformation.Builder getStationInformationBuilder() {
        return getStationInformationFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *实时站点信息
       * </pre>
       *
       * <code>.StationInformation stationInformation = 10;</code>
       */
      public StationInformationOuterClass.StationInformationOrBuilder getStationInformationOrBuilder() {
        if ((messageCase_ == 10) && (stationInformationBuilder_ != null)) {
          return stationInformationBuilder_.getMessageOrBuilder();
        } else {
          if (messageCase_ == 10) {
            return (StationInformationOuterClass.StationInformation) message_;
          }
          return StationInformationOuterClass.StationInformation.getDefaultInstance();
        }
      }
      /**
       * <pre>
       *实时站点信息
       * </pre>
       *
       * <code>.StationInformation stationInformation = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          StationInformationOuterClass.StationInformation, StationInformationOuterClass.StationInformation.Builder, StationInformationOuterClass.StationInformationOrBuilder>
          getStationInformationFieldBuilder() {
        if (stationInformationBuilder_ == null) {
          if (!(messageCase_ == 10)) {
            message_ = StationInformationOuterClass.StationInformation.getDefaultInstance();
          }
          stationInformationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              StationInformationOuterClass.StationInformation, StationInformationOuterClass.StationInformation.Builder, StationInformationOuterClass.StationInformationOrBuilder>(
                  (StationInformationOuterClass.StationInformation) message_,
                  getParentForChildren(),
                  isClean());
          message_ = null;
        }
        messageCase_ = 10;
        onChanged();;
        return stationInformationBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          TrafficParticipantOuterClass.TrafficParticipants, TrafficParticipantOuterClass.TrafficParticipants.Builder, TrafficParticipantOuterClass.TrafficParticipantsOrBuilder> pctsBuilder_;
      /**
       * <pre>
       *车辆周围交通参与者信息
       * </pre>
       *
       * <code>.TrafficParticipants pcts = 11;</code>
       */
      public boolean hasPcts() {
        return messageCase_ == 11;
      }
      /**
       * <pre>
       *车辆周围交通参与者信息
       * </pre>
       *
       * <code>.TrafficParticipants pcts = 11;</code>
       */
      public TrafficParticipantOuterClass.TrafficParticipants getPcts() {
        if (pctsBuilder_ == null) {
          if (messageCase_ == 11) {
            return (TrafficParticipantOuterClass.TrafficParticipants) message_;
          }
          return TrafficParticipantOuterClass.TrafficParticipants.getDefaultInstance();
        } else {
          if (messageCase_ == 11) {
            return pctsBuilder_.getMessage();
          }
          return TrafficParticipantOuterClass.TrafficParticipants.getDefaultInstance();
        }
      }
      /**
       * <pre>
       *车辆周围交通参与者信息
       * </pre>
       *
       * <code>.TrafficParticipants pcts = 11;</code>
       */
      public Builder setPcts(TrafficParticipantOuterClass.TrafficParticipants value) {
        if (pctsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          message_ = value;
          onChanged();
        } else {
          pctsBuilder_.setMessage(value);
        }
        messageCase_ = 11;
        return this;
      }
      /**
       * <pre>
       *车辆周围交通参与者信息
       * </pre>
       *
       * <code>.TrafficParticipants pcts = 11;</code>
       */
      public Builder setPcts(
          TrafficParticipantOuterClass.TrafficParticipants.Builder builderForValue) {
        if (pctsBuilder_ == null) {
          message_ = builderForValue.build();
          onChanged();
        } else {
          pctsBuilder_.setMessage(builderForValue.build());
        }
        messageCase_ = 11;
        return this;
      }
      /**
       * <pre>
       *车辆周围交通参与者信息
       * </pre>
       *
       * <code>.TrafficParticipants pcts = 11;</code>
       */
      public Builder mergePcts(TrafficParticipantOuterClass.TrafficParticipants value) {
        if (pctsBuilder_ == null) {
          if (messageCase_ == 11 &&
              message_ != TrafficParticipantOuterClass.TrafficParticipants.getDefaultInstance()) {
            message_ = TrafficParticipantOuterClass.TrafficParticipants.newBuilder((TrafficParticipantOuterClass.TrafficParticipants) message_)
                .mergeFrom(value).buildPartial();
          } else {
            message_ = value;
          }
          onChanged();
        } else {
          if (messageCase_ == 11) {
            pctsBuilder_.mergeFrom(value);
          }
          pctsBuilder_.setMessage(value);
        }
        messageCase_ = 11;
        return this;
      }
      /**
       * <pre>
       *车辆周围交通参与者信息
       * </pre>
       *
       * <code>.TrafficParticipants pcts = 11;</code>
       */
      public Builder clearPcts() {
        if (pctsBuilder_ == null) {
          if (messageCase_ == 11) {
            messageCase_ = 0;
            message_ = null;
            onChanged();
          }
        } else {
          if (messageCase_ == 11) {
            messageCase_ = 0;
            message_ = null;
          }
          pctsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *车辆周围交通参与者信息
       * </pre>
       *
       * <code>.TrafficParticipants pcts = 11;</code>
       */
      public TrafficParticipantOuterClass.TrafficParticipants.Builder getPctsBuilder() {
        return getPctsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *车辆周围交通参与者信息
       * </pre>
       *
       * <code>.TrafficParticipants pcts = 11;</code>
       */
      public TrafficParticipantOuterClass.TrafficParticipantsOrBuilder getPctsOrBuilder() {
        if ((messageCase_ == 11) && (pctsBuilder_ != null)) {
          return pctsBuilder_.getMessageOrBuilder();
        } else {
          if (messageCase_ == 11) {
            return (TrafficParticipantOuterClass.TrafficParticipants) message_;
          }
          return TrafficParticipantOuterClass.TrafficParticipants.getDefaultInstance();
        }
      }
      /**
       * <pre>
       *车辆周围交通参与者信息
       * </pre>
       *
       * <code>.TrafficParticipants pcts = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          TrafficParticipantOuterClass.TrafficParticipants, TrafficParticipantOuterClass.TrafficParticipants.Builder, TrafficParticipantOuterClass.TrafficParticipantsOrBuilder>
          getPctsFieldBuilder() {
        if (pctsBuilder_ == null) {
          if (!(messageCase_ == 11)) {
            message_ = TrafficParticipantOuterClass.TrafficParticipants.getDefaultInstance();
          }
          pctsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              TrafficParticipantOuterClass.TrafficParticipants, TrafficParticipantOuterClass.TrafficParticipants.Builder, TrafficParticipantOuterClass.TrafficParticipantsOrBuilder>(
                  (TrafficParticipantOuterClass.TrafficParticipants) message_,
                  getParentForChildren(),
                  isClean());
          message_ = null;
        }
        messageCase_ = 11;
        onChanged();;
        return pctsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Hmi)
    }

    // @@protoc_insertion_point(class_scope:Hmi)
    private static final HmiOuterClass.Hmi DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new HmiOuterClass.Hmi();
    }

    public static HmiOuterClass.Hmi getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Hmi>
        PARSER = new com.google.protobuf.AbstractParser<Hmi>() {
      public Hmi parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Hmi(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Hmi> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<Hmi> getParserForType() {
      return PARSER;
    }

    public HmiOuterClass.Hmi getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Hmi_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Hmi_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\tHmi.proto\032\rVehicle.proto\032\020DriveState.p" +
      "roto\032\022TrafficLight.proto\032\016Obstacle.proto" +
      "\032\021Information.proto\032\026NationalStandard.pr" +
      "oto\032\030StationInformation.proto\032\030TrafficPa" +
      "rticipant.proto\"\333\004\n\003Hmi\022\033\n\004type\030\001 \001(\0162\r." +
      "Hmi.DataType\022\n\n\002id\030\002 \001(\005\022\033\n\007vehicle\030\003 \001(" +
      "\0132\010.VehicleH\000\022%\n\014trafficLight\030\004 \001(\0132\r.Tr" +
      "afficLightH\000\022\035\n\010obstacle\030\005 \001(\0132\t.Obstacl" +
      "eH\000\022!\n\ndriveState\030\006 \001(\0132\013.DriveStateH\000\022#" +
      "\n\013information\030\007 \001(\0132\014.InformationH\000\022-\n\020n",
      "ationalStandard\030\010 \001(\0132\021.NationalStandard" +
      "H\000\022\036\n\024RoadSideNotification\030\t \001(\tH\000\0221\n\022st" +
      "ationInformation\030\n \001(\0132\023.StationInformat" +
      "ionH\000\022$\n\004pcts\030\013 \001(\0132\024.TrafficParticipant" +
      "sH\000\"\314\001\n\010DataType\022\013\n\007UNKNOWN\020\000\022\013\n\007VEHICLE" +
      "\020\001\022\021\n\rTRAFFIC_LIGHT\020\002\022\014\n\010OBSTACLE\020\003\022\017\n\013I" +
      "NFORMATION\020\004\022\017\n\013DRIVE_STATE\020\005\022\025\n\021NATIONA" +
      "L_STANDARD\020\006\022\031\n\025ROADSIDE_NOTIFICATION\020\007\022" +
      "\027\n\023STATION_INFORMATION\020\010\022\030\n\024TRAFFIC_PART" +
      "ICIPANTS\020\tB\t\n\007messageb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          VehicleOuterClass.getDescriptor(),
          DriveStateOuterClass.getDescriptor(),
          TrafficLightOuterClass.getDescriptor(),
          ObstacleOuterClass.getDescriptor(),
          InformationOuterClass.getDescriptor(),
          NationalStandardOuterClass.getDescriptor(),
          StationInformationOuterClass.getDescriptor(),
          TrafficParticipantOuterClass.getDescriptor(),
        }, assigner);
    internal_static_Hmi_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_Hmi_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Hmi_descriptor,
        new String[] { "Type", "Id", "Vehicle", "TrafficLight", "Obstacle", "DriveState", "Information", "NationalStandard", "RoadSideNotification", "StationInformation", "Pcts", "Message", });
    VehicleOuterClass.getDescriptor();
    DriveStateOuterClass.getDescriptor();
    TrafficLightOuterClass.getDescriptor();
    ObstacleOuterClass.getDescriptor();
    InformationOuterClass.getDescriptor();
    NationalStandardOuterClass.getDescriptor();
    StationInformationOuterClass.getDescriptor();
    TrafficParticipantOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
